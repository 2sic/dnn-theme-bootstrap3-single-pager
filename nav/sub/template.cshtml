@using DotNetNuke.Web.DDRMenu;
@using System.Dynamic; 
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<dynamic> 
@{ var root = Model.Source.root; }

@helper RenderNodes(IList<MenuNode> nodes) {
	if (nodes.Count > 0) {
		if(nodes[0].Depth == 0){
			<div class="visible-xs">
				<hr class="ly-darkhr">
			</div>
		}
		<ul class="@(nodes[0].Depth == 0 ? "nav nav-pills nav-stacked ly-nav-sub" : "")">
			@foreach (var node in nodes) {
				var cssClasses = new List<string>();
				cssClasses.Add("nav-" + node.TabId);
				if (node.First) { cssClasses.Add("first"); }
				if (node.Last) { cssClasses.Add("last"); }
				if (node.Breadcrumb) { cssClasses.Add("active"); } else { cssClasses.Add("inactive"); }
				var classString = new HtmlString((cssClasses.Count == 0) ? "" : (" class=\"" + String.Join(" ", cssClasses.ToArray()) + "\""));
				<li @classString>
					@if (node.Enabled) {
						<a @(node.Target == "_new" ? "target=\"_blank\"" : "") href="@node.Url"><small class="visible-xs-inline visible-sm-inline glyphicon glyphicon-chevron-right" aria-hidden="true"></small> @node.Text</a>
					} else {
						@node.Text
					}
					@if(node.Breadcrumb)
					{
						@RenderNodes(node.Children);
					}
				</li>
			}
		</ul>
	}
}

@RenderNodes(root.Children)
